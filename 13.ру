#Задание 1
Для датафрейма log из материалов занятия создайте столбец source_type по следующим правилам:

если источник traffic_source равен yandex или google, то в source_type ставится organic
для источников paid и email из России - ставим ad
для источников paid и email не из России - ставим other
все остальные варианты берем из traffic_source без изменений


import pandas as pd
visit = pd.read_csv('C:\\Users\\Ольга\\Desktop\\visit_log.csv', sep = ';')
visit.head(2)

visit.loc[(visit.traffic_source =='yandex')|(visit.traffic_source =='google'),'source_type']= 'organic'
visit.loc[(visit.traffic_source =='paid')&(visit.region == 'Russia')|(visit.traffic_source =='email')&(visit.region == 'Russia'),'source_type']= 'ad'
visit.loc[(visit.traffic_source =='paid')&(visit.region != 'Russia')|(visit.traffic_source =='email')&(visit.region != 'Russia'),'source_type']= 'other'
visit.head(20)


#Задание 2
В файле URLs.txt содержатся url страниц новостного сайта. Вам необходимо отфильтровать его по адресам страниц с текстами новостей. Известно, что шаблон страницы новостей имеет внутри url следующую конструкцию: /, затем 8 цифр, затем дефис. Выполните следующие действия:

Прочитайте содержимое файла с датафрейм
Отфильтруйте страницы с текстом новостей, используя метод str.contains и регулярное выражение в соответствии с заданным шаблоном


import pandas as pd
urls = pd.read_table('C:\\Users\\Ольга\\Desktop\\URLs.txt')

import re
novostnie = urls[urls.url.str.contains(r'(\/\d{8}\-)')]
novostnie 

# Домашнее задание 3
В датафрейме data создайте столбец lemmas, в котором вычислите леммы поисковых запросов из столбца keyword. Леммы должны иметь строковый тип."
import pandas as pd
data = pd.DataFrame({
    'keyword': ['курс гривны к рублю', 'доллары в рубли', '100 долларов в рублях', 'курс рубля'],
    'shows': [125076, 114173, 97534, 53546]
})

from pymystem3 import Mystem
#ModuleNotFoundError: No module named 'pymystem3'

lemma = m.lemmatize(row['keyword'])
string = ' '.join(lemma)
data['lemmas']=data.apply(string, axis=1)


'